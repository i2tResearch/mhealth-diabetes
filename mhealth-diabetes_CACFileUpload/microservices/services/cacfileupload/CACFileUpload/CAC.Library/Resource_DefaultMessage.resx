<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CONTROL_VALUE" xml:space="preserve">
    <value>@{0}@{1}@{2}@{3}@{4}@{5}</value>
    <comment>@Metodo: {0}@Nombre de la columna: {1}@Valor de la celda: {2}@Tipo de error: {3}@Valores{4}@Worksheet{5}</comment>
  </data>
  <data name="ERROR_CELL_DO_NOT_LIST_VALUE" xml:space="preserve">
    <value>La celda {0}{1} no tiene un valor valido o admitido por la plantilla.</value>
  </data>
  <data name="ERROR_CELL_EMPTY_OR_NULL" xml:space="preserve">
    <value>La celda {0}{1} está vacía.</value>
  </data>
  <data name="ERROR_CELL_HAVE_FORMULA" xml:space="preserve">
    <value>La celda {0}{1} contiene una formula o similar. La plantilla sólo permite números, fechas según el formato, o textos alfa-numericos.</value>
  </data>
  <data name="ERROR_CELL_NOT_FORMAT" xml:space="preserve">
    <value>La celda {0}{1} no contiene un valor valido al formato especificado en la plantilla. Tipo de formato admitido {2}.</value>
  </data>
  <data name="ERROR_CELL_NOT_VALID_TYPE" xml:space="preserve">
    <value>El tipo de dato de la celda {0}{1} no concuerda con el de la plantilla. Debe ser del tipo '{2}' y es de tipo '{3}'.</value>
  </data>
  <data name="ERROR_COLUMNS_NOT_EQUALS" xml:space="preserve">
    <value>El número de columnas no coinciden con la plantilla. Existen {0} columnas y deben ser {1}.</value>
  </data>
  <data name="ERROR_COLUMN_MISSING_NAME" xml:space="preserve">
    <value>La columna {0} no existe en el archivo y es requerido en la plantilla.</value>
  </data>
  <data name="ERROR_COLUMN_NAME_NOT_VALID" xml:space="preserve">
    <value>El nombre de la columna {0} no es valido.</value>
  </data>
  <data name="ERROR_COLUMN_NAME_REPEATED" xml:space="preserve">
    <value>Al menos {0} columna está repetida. No se permiten columnas repetidas: {1}.</value>
  </data>
  <data name="ERROR_COLUMN_NOT_ALLOWED" xml:space="preserve">
    <value>La columna {0} no esta permitida en la plantilla.</value>
  </data>
  <data name="ERROR_COLUMN_NOT_DATA" xml:space="preserve">
    <value>La columna {0} no contiene filas para ser analizadas y es requerido en la plantilla.</value>
  </data>
  <data name="ERROR_COLUMN_NOT_DUPLICATE_DATA" xml:space="preserve">
    <value>La columna {0} no permite valores duplicados.</value>
  </data>
  <data name="ERROR_FILE_NOT_VALID_EXT" xml:space="preserve">
    <value>El archivo enviado o enviados no tiene un extensión valida para ser procesado. Sólo se permiten extensiones CSV, XLS, o XLSX. Nombre del archivo: {0}.</value>
  </data>
  <data name="ERROR_LOG" xml:space="preserve">
    <value>Existe un error no clasificado. Por favor comunicarse con servicio técnico enviando el siguiente resultado: {0}.</value>
  </data>
  <data name="ERROR_ROW_" xml:space="preserve">
    <value />
  </data>
  <data name="ERROR_TEMPLATE_NOT_FOUND" xml:space="preserve">
    <value>La plantilla de comparación no pudo ser cargada o no se encuentra disponible en el servidor. Si este error persiste, comuniquese con servicio técnico.</value>
  </data>
</root>